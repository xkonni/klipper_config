# [mcu nano]
# serial: /dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0

# [mcu pico]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_E660583883511936-if00

# [board_pins arduino]
# mcu: nano
# aliases:
#   ar0=PD0, ar1=PD1, ar2=PD2, ar3=PD3, ar4=PD4,
#   ar5=PD5, ar6=PD6, ar7=PD7, ar8=PB0, ar9=PB1,
#   ar10=PB2, ar11=PB3, ar12=PB4, ar13=PB5, ar14=PC0,
#   ar15=PC1, ar16=PC2, ar17=PC3, ar18=PC4, ar19=PC5,
#   analog0=PC0, analog1=PC1, analog2=PC2, analog3=PC3, analog4=PC4,
#   analog5=PC5, analog6=PE2, analog7=PE3

# [output_pin led]
# pin: nano:ar13
# value: 0
#
# ## arduino nano
# [adxl345]
# #    The SPI enable pin for the sensor. This parameter must be provided.
# cs_pin: nano:ar10
# #    The SPI speed (in hz) to use when communicating with the chip.
# #    The default is 5000000.
# # spi_speed: 5000000
# #    See the "common SPI settings" section for a description of the
# #    above parameters.
# # spi_bus:
# spi_software_sclk_pin: nano:ar13
# spi_software_mosi_pin: nano:ar11
# spi_software_miso_pin: nano:ar12
# #    The accelerometer axis for each of the printer's x, y, and z axes.
# #    This may be useful if the accelerometer is mounted in an
# #    orientation that does not match the printer orientation. For
# #    example, one could set this to "y,x,z" to swap the x and y axes.
# #    It is also possible to negate an axis if the accelerometer
# #    direction is reversed (eg, "x,z,-y"). The default is "x,y,z".
# axes_map: x,z,-y
# #    Output data rate for ADXL345. ADXL345 supports the following data
# #    rates: 3200, 1600, 800, 400, 200, 100, 50, and 25. Note that it is
# #    not recommended to change this rate from the default 3200, and
# #    rates below 800 will considerably affect the quality of resonance
# #    measurements.
# # rate: 3200

# ## rpi pico
# [adxl345]
# cs_pin: pico:gpio1
# spi_bus: spi0a
# axes_map: x,y,z

# [resonance_tester]
# accel_chip: adxl345
# probe_points:
#     150,150,20  # an example

